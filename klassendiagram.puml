@startuml
class Player {
    - nickname: String
    - score: Number
    - highScore: Number
    - verfügbareLeben: Number
    + ladePlayerDaten()
    + speicherePlayerDaten()
    + aktualisiereHighScore()
    + verliereLeben()
    + erhöheScore(punkte: Number)
}

class DatabaseManager {
    + speichereDaten(collection: String, id: String, data: Object)
    + ladeDaten(collection: String, id: String): Object
    + ladeHighscoreListe(): Array
}

class Entity {
    - position: Object
    - größe: Number
    - geschwindigkeit: Number
    - img: String
    + bewegen()
}

class Hai {
    - leben: Number
    - lebenAnzahl: Number
    - coins: Number
    + fressen(fisch: Fisch)
    + angreifen(gegner: Gegner)
    + sammleCoin(coin: Coin)
    + verliereLeben()
    + istGameOver(): Boolean
}

class Fisch {
    - punkte: Number
    + schwimmen()
}

class Gegner {
    - stärke: Number
    - leben: Number
    + angreifen(hai: Hai)
}

class Krake {
    - tintenangriff: Boolean
    + verwirren(hai: Hai)
}

class Barrakuda {
    - bisskraft: Number
    + blitzangriff(hai: Hai)
}

class GiftigerFisch {
    - giftLevel: Number
    + vergiften(hai: Hai)
}

class Coin {
    - wert: Number
    + einsammeln(hai: Hai)
}

class Ozean {
    - größe: Number
    - hintergrund: String
    - img: String
    - hindernisse: Array
    - fische: Array
    - gegner: Array
    - coins: Array
    + spawneFisch()
    + spawneGegner()
    + spawneCoin()
}

Entity <|-- Hai
Entity <|-- Fisch
Entity <|-- Gegner
Entity <|-- Coin

Gegner <|-- Krake
Gegner <|-- Barrakuda
Gegner <|-- GiftigerFisch

Hai --> Fisch : frisst >
Hai --> Gegner : kämpft gegen >
Hai --> Coin : sammelt >
Ozean --> Fisch : spawnt >
Ozean --> Gegner : spawnt >
Ozean --> Coin : spawnt >

Player --> Hai : steuert >
Player --> DatabaseManager : nutzt >
DatabaseManager --> Player : speichert/lädt Daten >
@enduml
